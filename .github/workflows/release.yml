on:
  push:
    tags:
    - 'v*'

name: TAG Release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2.5.0
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
        with:
          node-version: '14'
        # Create screenshots directory
      - run: mkdir screenshots

      - uses: actions/cache@v2.1.7
        env:
          node-version: 14.1.0
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-node${{ env.node-version }}

      - name: Get Current Tag
        id: get_current_tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

      - name: Get Previous tag
        id: previous_tag
        run: echo ::set-output name=tag::$(git tag --sort v:refname | tail -n 2 | head -n 1)

      - name: Get next version
        id: semvers
        uses: WyriHaximus/github-action-next-semvers@v1.1
        with:
          version: ${{ steps.previous_tag.outputs.tag }}

    # Minor PROD releases.
      - name: Set production agents (minor for PROD)
        if: steps.semvers.outputs.v_minor == steps.get_current_tag.outputs.tag
        env:
          VUE_APP_AMPLITUDE_API_KEY: ${{ secrets.VUE_APP_AMPLITUDE_API_KEY }}
        run: |
            echo VUE_APP_AMPLITUDE_API_KEY =${{ secrets.VUE_APP_AMPLITUDE_API_KEY_PROD }} >> .env
            sed -i "s/\/swap-testnet-dev\/agent/\/swap-testnet\/agent/g; s/\/swap-dev\/agent/\/swap\/agent/g" src/build.config.js
            npm ci
            npm run lint
            npm run build

    # Patch DEV release.
      - name: Set development manifest (patch for DEV)
        if: steps.semvers.outputs.v_patch == steps.get_current_tag.outputs.tag
        env:
          VUE_APP_AMPLITUDE_API_KEY: ${{ secrets.VUE_APP_AMPLITUDE_API_KEY_DEV }}
        run: |
          echo VUE_APP_AMPLITUDE_API_KEY =${{ secrets.VUE_APP_AMPLITUDE_API_KEY_DEV }} >> .env
          jq --argjson icons "{\"16\": \"icons/dev/16x16.png\",\"48\": \"icons/dev/48x48.png\",\"128\": \"icons/dev/128x128.png\"}" '.icons = $icons | .browser_action.default_icon = $icons | .name = "Liquality Wallet - Dev"' ./src/manifest.json > ./src/manifest.tmp
          mv ./src/manifest.tmp ./src/manifest.json
          npm ci
          npm run lint
          npm run build

      - name: E2E tests against Dev Mainnet Agent
        if: steps.semvers.outputs.v_patch == steps.get_current_tag.outputs.tag
        uses: beemi/puppeteer-headful@v1.0.6
        env:
          CI: 'true'
          DISPLAY: :99
          SEED_WORDS: ${{ secrets.TEST_NET_SEED_WORDS }}
          TWENTY_FOUR_SEEDS: ${{ secrets.TWENTY_FOUR_SEEDS }}
        with:
          args: npm run test:mainnet:devagent #Run tests against dev mainnet

      - name: E2E tests against Prod Mainnet Agent
        if: steps.semvers.outputs.v_minor == steps.get_current_tag.outputs.tag
        uses: beemi/puppeteer-headful@v1.0.6
        env:
          CI: 'true'
          DISPLAY: :99
          SEED_WORDS: ${{ secrets.TEST_NET_SEED_WORDS }}
          TWENTY_FOUR_SEEDS: ${{ secrets.TWENTY_FOUR_SEEDS }}
        with:
          args: npm run test:mainnet:prodagent #Run tests against Prod mainnet

      - name: Save Screenshots
        uses: actions/upload-artifact@v2.3.0
        if: always()
        with:
          name: screenshots
          path: screenshots
          if-no-files-found: ignore

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}

      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/liquality-wallet-${{ steps.get_current_tag.outputs.tag }}-production.zip
          asset_name: liquality-wallet-${{ steps.get_current_tag.outputs.tag }}.zip
          asset_content_type: application/zip

      - name: Chrome Extension Publish
        uses: SebastienGllmt/chrome-addon@v3
        if: steps.semvers.outputs.v_patch == steps.get_current_tag.outputs.tag
        with:
          client-id: ${{ secrets.WEB_STORE_CLIENT_ID }}
          client-secret: ${{ secrets.WEB_STORE_CLIENT_SECRET }}
          refresh-token: ${{ secrets.WEB_STORE_REFRESH_TOKEN }}
          zip: ./artifacts/liquality-wallet-${{ steps.get_current_tag.outputs.tag }}-production.zip
          extension: bkhfdnhibdhkbfihmljakbgnldoikgbm
          publishTarget: trustedTesters

      - name: Discord notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_PULL_REQUESTS_WEBHOOK }}
          title: "${{ github.workflow}}"
          description: |
            Release `liquality-wallet-${{ steps.get_current_tag.outputs.tag }}.zip`
